from aiogram import Router, types
from aiogram.filters import CommandObject, Command
from app.models import TelegramLinkCode
from django.utils import timezone
from asgiref.sync import sync_to_async

router = Router()

@router.message(Command("link"))
async def link_account(message: types.Message, command: CommandObject):
    code = command.args
    if not code:
        await message.answer("‚ùó –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /link <–∫–æ–¥_–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è>")
        return

    try:
        link_code = await sync_to_async(
            lambda: TelegramLinkCode.objects.select_related('user').get(code=code, is_used=False)
        )()
    except TelegramLinkCode.DoesNotExist:
        await message.answer("üö´ –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.")
        return

    user = link_code.user
    user.telegram_id = message.from_user.id
    # Wrap user.save() in sync_to_async
    await sync_to_async(user.save)()

    link_code.is_used = True
    # Wrap link_code.save() in sync_to_async
    await sync_to_async(link_code.save)()

    await message.answer(f"‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, {user.full_name}!")